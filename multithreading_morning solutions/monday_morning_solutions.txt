import java.util.*;

import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;

class QueueBlocking{

     List<Integer> list = new ArrayList<Integer>();
     int items = 0;
     int max = 5;
     int min= 0;

    public synchronized void put() {
        while(true) {
            if( list.size()==max ) {
                System.out.println("Queue is full. No task is taken by any of the consumer.");
                
                try {
                    wait();
                } 
                catch(InterruptedException e)
                {
                    e.printStackTrace();
                }
            }
            else
            {
                System.out.println("Thread produced " + items);
                items++;
                list.add(items);
                notifyAll();
            }
        }
    }

    public synchronized void take() {
        
        while(true) {
            if( list.size()==min) 
            {
                System.out.println("Queue is empty. There is no task present in the Queue.");
                try 
                {
                    wait();
                }
                catch(InterruptedException e) 
                {
                    e.printStackTrace();
                }
            }
            else
            {
                System.out.println("Thread consumed " + list.remove(items));
                items--;
                notify();
            }
        }
    }
}

public class Main {

    public static void main(String[] args) throws InterruptedException 
    {
        Scanner in = new Scanner(System.in);
        System.out.println("Enter the number of consumer thread for creation");
        
        int n = in.nextInt();

        QueueBlocking block_queue_instance = new QueueBlocking();

        Thread producer=new Thread(()-> {
                block_queue_instance.put();
        });
        producer.start();

        ExecutorService consumer = Executors.newFixedThreadPool(n);
        for (int i = 0; i < n; i++) {
            consumer.submit(new Runnable() 
            {
                public void run()
                {
					block_queue_instance.take();
                }
            }
            );
        }
    }
}


